name: Native MacOS

on:
  push:
    branches: [ main, ci-sandbox ]
  pull_request:
    branches: [ main, ci-sandbox ]

jobs:
  build-macos:
    strategy: 
      fail-fast: false
      matrix:
        include:
          - name: "full-marian"
            os: macos-10.15
            cmake: 
              CMAKE_BUILD_TYPE: "Release"
              COMPILE_TESTS: "ON"
              USE_WASM_COMPATIBLE_SOURCE: "OFF"
              USE_FBGEMM: "OFF"
              USE_STATIC_LIBS: "OFF"
              COMPILE_SERVER: "OFF"
              COMPILE_EXAMPLES: "OFF"
              TEST_TAGS: ""

          - name: "full-marian-slim"
            os: macos-10.15
            cmake: 
              CMAKE_BUILD_TYPE: "Slim"
              COMPILE_TESTS: "ON"
              USE_WASM_COMPATIBLE_SOURCE: "OFF"
              USE_STATIC_LIBS: "OFF"
              USE_FBGEMM: "OFF"
              COMPILE_SERVER: "OFF"
              COMPILE_EXAMPLES: "OFF"
              TEST_TAGS: ""

          - name: "minimal-marian"
            os: macos-10.15
            cmake: 
              CMAKE_BUILD_TYPE: "Release"
              COMPILE_TESTS: "ON"
              USE_WASM_COMPATIBLE_SOURCE: "OFF"
              USE_FBGEMM: "OFF"
              USE_STATIC_LIBS: "OFF"
              COMPILE_SERVER: "OFF"
              COMPILE_EXAMPLES: "OFF"
              TEST_TAGS: "#wasm"
        
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
          brew update
          brew install openblas protobuf coreutils

    # Openblas location is exported explicitly because openblas is keg-only,
    # which means it was not symlinked into /usr/local/.
    # CMake cannot find BLAS on GitHub runners if Marian is being compiled
    # statically, hence USE_STATIC_LIBS=off
    - name: Configure CMake
      run: |
        export LDFLAGS="-L/usr/local/opt/openblas/lib"
        export CPPFLAGS="-I/usr/local/opt/openblas/include"
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ matrix.cmake.CMAKE_BUILD_TYPE }}\
          -DCOMPILE_TESTS=${{ matrix.cmake.COMPILE_TESTS }}\
          -DCOMPILE_EXAMPLES=${{ matrix.cmake.COMPILE_EXAMPLES }} \
          -DCOMPILE_SERVER=${{ matrix.cmake.COMPILE_SERVER }} \
          -DUSE_STATIC_LIBS=${{ matrix.cmake.USE_STATIC_LIBS }} \
          -DUSE_WASM_COMPATIBLE_SOURCE=${{ matrix.cmake.USE_WASM_COMPATIBLE_SOURCE }} \
          -DUSE_FBGEMM=${{ matrix.cmake.USE_FBGEMM }}

    - name: Compile
      working-directory: build
      run: make -j2

    - name: Run unit tests
      working-directory: build
      run: make test
      if: matrix.cmake.COMPILE_TESTS == 'ON'

    - name: Print versions
      working-directory: build
      run: |
        ./app/bergamot-translator-app --version

    # Configure hooks to upload artifacts if the build is Slim
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: bergamot-translator-artifacts
        path: |
            ./build/app/service-cli*
            ./build/app/bergamot-translator-app*
            ./build/app/marian-decoder-new
      if: matrix.cmake.CMAKE_BUILD_TYPE == 'Slim'

    - name: Install regression-test framework (BRT)
      working-directory: bergamot-translator-tests
      run : make install

    - name: Run regression-tests (BRT)
      working-directory: bergamot-translator-tests
      run : MARIAN=../build ./run_brt.sh ${{ matrix.cmake.TEST_TAGS }}

    - name: Upload regression-tests artifacts
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with: 
        name: brt-artifacts-${{ matrix.name }}
        path: |
            bergamot-translator-tests/**/*.expected
            bergamot-translator-tests/**/*.log
            bergamot-translator-tests/**/*.out
